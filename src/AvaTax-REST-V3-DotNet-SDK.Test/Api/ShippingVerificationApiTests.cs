/*
 * Avalara Shipping Verification for Beverage Alcohol
 *
 * API for evaluating transactions against direct-to-consumer Beverage Alcohol shipping regulations.  This API is currently in beta. 
 *
 Generated by AVALARA
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AvaTax-REST-V3-DotNet-SDK.Client;
using AvaTax-REST-V3-DotNet-SDK.Api;
// uncomment below to import models
//using AvaTax-REST-V3-DotNet-SDK.Model;

namespace AvaTax-REST-V3-DotNet-SDK.Test.Api
{
    /// <summary>
    ///  Class for testing ShippingVerificationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ShippingVerificationApiTests : IDisposable
    {
        private ShippingVerificationApi instance;

        public ShippingVerificationApiTests()
        {
            instance = new ShippingVerificationApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ShippingVerificationApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ShippingVerificationApi
            //Assert.IsType<ShippingVerificationApi>(instance);
        }

        /// <summary>
        /// Test DeregisterShipment
        /// </summary>
        [Fact]
        public void DeregisterShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string companyCode = null;
            //string transactionCode = null;
            //string documentType = null;
            //instance.DeregisterShipment(companyCode, transactionCode, documentType);
        }

        /// <summary>
        /// Test RegisterShipment
        /// </summary>
        [Fact]
        public void RegisterShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string companyCode = null;
            //string transactionCode = null;
            //string documentType = null;
            //instance.RegisterShipment(companyCode, transactionCode, documentType);
        }

        /// <summary>
        /// Test RegisterShipmentIfCompliant
        /// </summary>
        [Fact]
        public void RegisterShipmentIfCompliantTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string companyCode = null;
            //string transactionCode = null;
            //string documentType = null;
            //var response = instance.RegisterShipmentIfCompliant(companyCode, transactionCode, documentType);
            //Assert.IsType<ShippingVerifyResult>(response);
        }

        /// <summary>
        /// Test VerifyShipment
        /// </summary>
        [Fact]
        public void VerifyShipmentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string companyCode = null;
            //string transactionCode = null;
            //string documentType = null;
            //var response = instance.VerifyShipment(companyCode, transactionCode, documentType);
            //Assert.IsType<ShippingVerifyResult>(response);
        }
    }
}
